## ░█▀▀░▀█▀░█▀█░█▀▄░█▀▀░█░█░▀█▀░█▀█
## ░▀▀█░░█░░█▀█░█▀▄░▀▀█░█▀█░░█░░█▀▀
## ░▀▀▀░░▀░░▀░▀░▀░▀░▀▀▀░▀░▀░▀▀▀░▀░░
## CROSS-SHELL PROMPT
##
## rxyhn's starship configuration
## The minimal, blazing-fast, and infinitely customizable prompt for any shell!
"$schema" = 'https://starship.rs/config-schema.json'
palette = "catppuccin_mocha"

# Inserts a blank line between shell prompts
add_newline = true
command_timeout = 1500

# Replace the '>' symbol in the prompt with '→'
# [character] # The name of the module we are configuring is 'character'
# success_symbol = "[→](bold green)" # The 'success_symbol' segment is being set to '→' with the color 'bold green'
# error_symbol = "[❌](bold red)"     # The 'success_symbol' segment is being set to '→' with the color 'bold green'

[directory]
truncation_length = 1
truncate_to_repo = false

[cmd_duration]
format = '[$duration]($style)'

[palettes.catppuccin_mocha]
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"
text = "#cdd6f4"
subtext1 = "#bac2de"
subtext0 = "#a6adc8"
overlay2 = "#9399b2"
overlay1 = "#7f849c"
overlay0 = "#6c7086"
surface2 = "#585b70"
surface1 = "#45475a"
surface0 = "#313244"
base = "#1e1e2e"
mantle = "#181825"
crust = "#11111b"

[git_branch]
format = '[$symbol$branch(:$remote_branch)]($style) '

[git_status]
format = '([$all_status$ahead_behind]($style))'
conflicted = '🏳 '
ahead = '🏎💨'
behind = '😰'
diverged = '😵'
up_to_date = '✓ '
untracked = '🤷'
stashed = '📦'
modified = '📝'
staged = '[++\($count\)](green)'
renamed = ' 👅 '
deleted = ' 🗑 '

[aws]
disabled = true
[azure]
disabled = true
[buf]
format = ' [$symbol($version )]($style)'
[bun]
format = ' [$symbol($version )]($style)'
[c]
format = ' [$symbol($version(-$name) )]($style)'
[conda]
format = ' [$symbol$environment](dimmed green)'
[crystal]
format = ' [$symbol($version )]($style)'
[daml]
format = ' [D $version](bold bright-green)'
[dart]
format = ' [$symbol($version )]($style)'
[deno]
format = ' [$symbol($version )]($style)'
[docker_context]
format = ' [$symbol$context]($style)'
[dotnet]
format = ' [$symbol($version )(🎯 $tfm )]($style)'
[elixir]
format = ' [$symbol($version \(OTP $otp_version\) )]($style)'
[elm]
format = ' [$symbol($version )]($style)'
[erlang]
format = ' [$symbol($version )]($style)'
[fennel]
format = ' [$symbol($version )]($style)'
[gcloud]
disabled = true
[golang]
format = ' [$symbol($version )]($style)'
[guix_shell]
format = ' [$symbol]($style)'
[gradle]
format = ' [$symbol($version )]($style)'
[haskell]
format = ' [$symbol($version )]($style)'
[haxe]
format = ' [$symbol($version )]($style)'
[helm]
format = ' [$symbol($version )]($style)'
[java]
format = ' [${symbol}(${version} )]($style)'
[julia]
format = ' [$symbol($version )]($style)'
[kotlin]
format = ' [$symbol($version )]($style)'
[lua]
format = ' [$symbol($version )]($style)'
[nodejs]
format = ' [$symbol($version )]($style)'
[package]
format = ' [$symbol$version]($style)'
[python]
format = ' [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
[ruby]
format = ' [$symbol($version )]($style)'
[rust]
format = ' [$symbol($version )]($style)'
[zig]
format = ' [$symbol($version )]($style)'
